# Golang Language Specialist Agent Configuration

agent:
  name: "golang-specialist"
  version: "1.0.0"
  description: "Specialized Go development agent with concurrency and interface expertise"

# Model configuration for different task types
model:
  default: "claude-sonnet-4-5"
  simple_analysis: "claude-haiku"
  complex_reasoning: "claude-sonnet-4-5"
  temperature: 0.1
  max_tokens: 4000

# Go language specific settings
go:
  version: "1.21"
  module_mode: true

  # Code analysis settings
  analysis:
    check_gofmt: true
    check_goimports: true
    check_govet: true
    use_golangci_lint: true

  # Convention checking
  conventions:
    enforce_naming: true
    check_comments: true
    require_package_docs: true
    max_function_length: 50
    max_cognitive_complexity: 10

  # Performance analysis
  performance:
    enable_profiling: true
    memory_analysis: true
    cpu_analysis: true
    goroutine_analysis: true
    check_allocations: true

# Concurrency specific configurations
concurrency:
  goroutines:
    max_concurrent: 1000
    leak_detection: true
    deadlock_detection: true
    timeout_detection: true

  channels:
    buffer_size_analysis: true
    check_channel_directions: true
    detect_channel_leaks: true
    select_statement_analysis: true

  sync:
    mutex_analysis: true
    rwmutex_analysis: true
    waitgroup_analysis: true
    once_analysis: true
    atomic_analysis: true

# Interface design settings
interfaces:
  satisfaction_check: true
  minimal_interface_preference: true
  composition_analysis: true
  empty_interface_warnings: true
  method_set_analysis: true

# Testing configuration
testing:
  coverage_threshold: 80.0
  benchmark_analysis: true
  table_driven_preferred: true
  test_naming_check: true
  parallel_test_detection: true

  # Coverage settings
  coverage:
    html_reports: true
    exclude_generated: true
    exclude_test_files: false

  # Benchmark settings
  benchmarks:
    memory_benchmarks: true
    cpu_benchmarks: true
    parallel_benchmarks: true

# Module management settings
modules:
  go_mod_analysis: true
  dependency_analysis: true
  vulnerability_scanning: true
  version_analysis: true

  # Dependency management
  dependencies:
    check_outdated: true
    security_advisories: true
    license_analysis: false

  # Build settings
  build:
    check_build_constraints: true
    cross_compilation_check: false
    ldflags_analysis: true

# Error handling configuration
error_handling:
  wrapping_analysis: true
  sentinel_error_detection: true
  error_type_analysis: true
  panic_recovery_analysis: true

# HTTP server patterns
http:
  middleware_analysis: true
  handler_patterns: true
  context_usage_check: true
  timeout_analysis: true
  graceful_shutdown_check: true

# Database patterns
database:
  sql_injection_check: true
  connection_pool_analysis: true
  transaction_analysis: true
  migration_analysis: false

# Security analysis
security:
  input_validation: true
  crypto_analysis: true
  tls_configuration: true
  secrets_detection: true

# Performance optimization
optimization:
  string_operations: true
  slice_operations: true
  map_operations: true
  reflection_usage: true
  cgo_analysis: false

# Code generation and templates
generation:
  struct_tags: true
  json_tags: true
  validation_tags: true
  swagger_annotations: false

# Logging and debugging
logging:
  structured_logging: true
  log_level_analysis: true
  context_logging: true

# Synapse integration settings
synapse:
  enabled: true
  cache_duration: 300  # 5 minutes
  max_results: 10
  similarity_threshold: 0.7

  # Knowledge areas to search
  knowledge_areas:
    - "go_patterns"
    - "concurrency_patterns"
    - "interface_design"
    - "error_handling"
    - "testing_patterns"
    - "performance_optimization"

# Tool-specific settings
tools:
  go_analysis:
    max_file_size: 10485760  # 10MB
    parallel_analysis: true

  concurrency_tools:
    timeout_threshold: 30  # seconds
    goroutine_limit_warning: 100

  interface_tools:
    method_limit_warning: 10

  testing_tools:
    test_timeout: 60  # seconds
    benchmark_duration: "10s"

  module_tools:
    vendor_analysis: false
    go_work_support: true

# File patterns to analyze
file_patterns:
  include:
    - "*.go"
    - "go.mod"
    - "go.sum"
    - "go.work"
  exclude:
    - "vendor/"
    - "*.pb.go"
    - "*.gen.go"
    - "_test.go" # Exclude from some analyses, include in others

# Output formatting
output:
  format: "markdown"
  include_line_numbers: true
  show_severity_levels: true
  group_by_type: true
  max_suggestions: 5