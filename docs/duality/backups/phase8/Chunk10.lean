/-
Chunk 10: Data Flow Example 1: Simple Task
Auto-generated by transpile_to_lean.py
-/

import Duality.Base
import Duality.Lemmas

namespace Chunk10
open Duality

def domainConstraints (x : X8) : Prop :=
  -- constraint: chunk_10_exists
  (True) ∧
  -- constraint: optimization_required
  (True) ∧
  -- constraint: dimension_floor_dim1
  (dimensionFloor x.x1 1) ∧
  -- constraint: tract_minimum_start1_end4
  (tractMinimum x 1 4 10) ∧
  -- constraint: uniformity_start1_end8
  (uniformityConstraint x 1 8 1)

-- Decidability instance (required for computational verification)
instance : Decidable (domainConstraints x) := by
  unfold domainConstraints
  infer_instance

-- Witness (to be injected from MiniZinc solution)
def witness : X8 := ⟨93, 1, 1, 1, 1, 1, 1, 1⟩

theorem witness_valid : unitary witness ∧ domainConstraints witness := by
  decide

theorem exists_solution : ∃ x : X8, unitary x ∧ domainConstraints x :=
  ⟨witness, witness_valid⟩

end Chunk10