# Duality CI Secrets (SOPS-encrypted)
# Phase 6: Encrypted secret management for duality subsystem
#
# TO ENCRYPT THIS FILE:
#   sops -e -i .github/workflows/secrets/duality-ci.sops.yaml
#
# TO DECRYPT THIS FILE:
#   sops -d .github/workflows/secrets/duality-ci.sops.yaml
#
# TO EDIT THIS FILE:
#   sops .github/workflows/secrets/duality-ci.sops.yaml
#
# NOTE: This file contains placeholders for Phase 6. Actual secrets will be added
# in future phases when integrations require them.

# =============================================================================
# Future: Cachix Binary Cache (Phase 7+)
# =============================================================================
cachix:
  # Cachix authentication token for pushing build artifacts to binary cache
  # Required when: Setting up shared Nix binary cache across CI/dev machines
  # How to get: https://app.cachix.org/ → Create cache → Generate auth token
  auth_token: "PLACEHOLDER_WILL_BE_ENCRYPTED_WHEN_CACHIX_IS_SETUP"
  cache_name: "synapse-duality"

# =============================================================================
# Future: Enhanced GitHub API Access (PR Comments, Metrics)
# =============================================================================
github:
  # GitHub Personal Access Token with enhanced permissions
  # Required when: Adding automated PR comments with consciousness metrics
  # How to get: GitHub Settings → Developer settings → Personal access tokens
  # Scopes needed: repo, write:discussion
  enhanced_token: "PLACEHOLDER_WILL_BE_ENCRYPTED_WHEN_PR_AUTOMATION_ENABLED"

# =============================================================================
# Future: Noesis MCP Integration (Agent-Step Impure Mode)
# =============================================================================
noesis:
  # Noesis MCP API key for knowledge engine access
  # Required when: duality-agent-step --impure integrates with Noesis MCP
  # How to get: From Noesis MCP server deployment
  api_key: "PLACEHOLDER_WILL_BE_ENCRYPTED_WHEN_MCP_INTEGRATION_ENABLED"
  endpoint: "https://localhost:3000"  # Default local endpoint
  timeout_seconds: 30

# =============================================================================
# Future: Slack/Discord Notifications (Nightly Failures)
# =============================================================================
notifications:
  # Slack webhook URL for nightly build failure notifications
  # Required when: Adding failure alerts to duality-nix-nightly.yml
  # How to get: Slack workspace → Apps → Incoming Webhooks
  slack_webhook: "PLACEHOLDER_WILL_BE_ENCRYPTED_WHEN_SLACK_INTEGRATION_ENABLED"

  # Discord webhook URL for nightly build failure notifications
  # Required when: Adding failure alerts to duality-nix-nightly.yml
  # How to get: Discord server → Integrations → Webhooks
  discord_webhook: "PLACEHOLDER_WILL_BE_ENCRYPTED_WHEN_DISCORD_INTEGRATION_ENABLED"

# =============================================================================
# Phase 6 Status: PLACEHOLDERS ONLY
# =============================================================================
# All values above are placeholders for future integrations.
# SOPS infrastructure is established but no real secrets exist yet.
#
# Next steps:
# 1. User encrypts this file: sops -e -i .github/workflows/secrets/duality-ci.sops.yaml
# 2. User adds SOPS_AGE_KEY to GitHub repo secrets (Settings → Secrets → Actions)
# 3. CI workflows decrypt this file (currently tolerates missing secrets with continue-on-error)
#
# When real secrets are needed:
# 1. sops .github/workflows/secrets/duality-ci.sops.yaml  # Opens editor
# 2. Replace PLACEHOLDER_* with real values
# 3. Save and exit (SOPS auto-encrypts)
# 4. Commit encrypted file to repo
