name: Duality Formalization Validation

on:
  push:
    paths:
      - 'docs/duality/**'
  pull_request:
    paths:
      - 'docs/duality/**'

jobs:
  validate-minizinc:
    name: Validate MiniZinc Models
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup MiniZinc
        run: |
          wget -q https://github.com/MiniZinc/MiniZincIDE/releases/download/2.8.5/minizinc-2.8.5-x86_64-linux.tar.gz
          tar -xzf minizinc-2.8.5-x86_64-linux.tar.gz
          echo "$PWD/MiniZincIDE-2.8.5-x86_64-linux/bin" >> $GITHUB_PATH

      - name: Validate MiniZinc Syntax
        run: |
          cd docs/duality/true-dual-tract/chunks
          success=0
          total=0
          for f in chunk-*.mzn; do
            total=$((total + 1))
            if minizinc --check-only "$f" 2>&1; then
              success=$((success + 1))
            else
              echo "❌ Failed: $f"
            fi
          done
          echo "✓ Syntax check: $success/$total files passed"
          [ $success -eq $total ] || exit 1

  validate-lean:
    name: Validate Lean4 Proofs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Lean
        uses: leanprover/lean-action@v1
        with:
          lean-version: 'v4.24.0-rc1'

      - name: Build Lean Project
        run: |
          cd docs/duality/formal
          lake update
          lake build Duality

      - name: Run Lean Tests
        run: |
          cd docs/duality/formal
          lake build Duality.Tests

  cross-check:
    name: Cross-Check Constraint Equivalence
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Cross-Check (Strict Mode for Pilots)
        run: |
          cd docs/duality
          echo "=== Validating pilot chunks (strict mode) ==="
          python3 scripts/cross_check_all.py --chunks 06 09 19 --report reports/cross-check-pilots.md

          echo ""
          echo "=== Validating all chunks (warn-only mode) ==="
          python3 scripts/cross_check_all.py --warn-only --report reports/cross-check-all.md

      - name: Upload Cross-Check Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cross-check-reports
          path: |
            docs/duality/reports/cross-check-pilots.md
            docs/duality/reports/cross-check-all.md
          retention-days: 30

  unit-tests:
    name: Transpiler Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup MiniZinc
        run: |
          wget -q https://github.com/MiniZinc/MiniZincIDE/releases/download/2.8.5/minizinc-2.8.5-x86_64-linux.tar.gz
          tar -xzf minizinc-2.8.5-x86_64-linux.tar.gz
          echo "$PWD/MiniZincIDE-2.8.5-x86_64-linux/bin" >> $GITHUB_PATH

      - name: Setup Lean
        uses: leanprover/lean-action@v1
        with:
          lean-version: 'v4.24.0-rc1'

      - name: Run Transpiler Unit Tests
        run: |
          cd docs/duality/scripts
          python3 run_tests.py

      - name: Test Coverage Summary
        run: |
          cd docs/duality/scripts
          echo "✓ Unit tests: 22 tests covering:"
          echo "  - MiniZinc transpiler (operator mapping, functions)"
          echo "  - Lean4 transpiler (sum expansion, array indexing)"
          echo "  - Constraint injection (heuristics, counting)"
          echo "  - Compilation validation (MZN/Lean syntax check)"

  validate-json-schema:
    name: Validate Constraint JSON Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install jsonschema
        run: pip install jsonschema

      - name: Validate JSON Syntax
        run: |
          cd docs/duality
          success=0
          total=0
          for f in true-dual-tract/chunks/chunk-*.constraints.json; do
            total=$((total + 1))
            if python3 -m json.tool "$f" > /dev/null 2>&1; then
              success=$((success + 1))
            else
              echo "❌ Invalid JSON: $f"
            fi
          done
          echo "✓ JSON syntax validation: $success/$total files passed"
          [ $success -eq $total ] || exit 1

      - name: Validate Against Schema
        run: |
          cd docs/duality
          python3 -c "
          import json, jsonschema, sys
          from pathlib import Path

          schema = json.loads(Path('templates/chunk-constraints.schema.json').read_text())
          errors = []
          success = 0
          total = 0

          for f in sorted(Path('true-dual-tract/chunks').glob('chunk-*.constraints.json')):
              total += 1
              try:
                  data = json.loads(f.read_text())
                  jsonschema.validate(data, schema)
                  success += 1
              except jsonschema.ValidationError as e:
                  errors.append(f'❌ {f.name}: {e.message}')
              except Exception as e:
                  errors.append(f'❌ {f.name}: {str(e)}')

          if errors:
              print('\n'.join(errors))
              print(f'\n✗ Schema validation: {success}/{total} files passed')
              sys.exit(1)

          print(f'✓ Schema validation: {success}/{total} files conform to schema')
          "

  validate-tract-balance:
    name: Validate Universal Tract Balance (M_syn)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Validate Tract Balance
        run: |
          cd docs/duality
          echo "=== Validating universal tract balance (|T_int - T_ext| ≤ 100) ==="
          python3 scripts/validate_tract_balance.py --threshold 100 --fail-on-violation

      - name: Validate Balance Summary
        run: |
          cd docs/duality
          echo ""
          echo "✓ All chunks satisfy M_syn meta-pattern: T_int ≈ T_ext"
          echo "  This validates dual-tract consciousness equilibrium"

