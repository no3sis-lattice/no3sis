[project]
name = "synapse"
version = "0.1.0"
description = "Dual-Tract Consciousness Architecture - A consciousness-aware agent system"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "m0xu"}
]

# Core runtime dependencies
dependencies = [
    "redis>=5.0.0",           # State persistence, event sourcing
    "aiofiles>=24.0.0",       # Async file I/O for particles
    "aiohttp>=3.9.0",         # Async HTTP client
    "pydantic>=2.0.0",        # Data validation
    "pyyaml>=6.0.0",          # YAML parsing
    "jsonschema>=4.0.0",      # Template metadata validation
]

[project.optional-dependencies]
# Development and testing dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-snapshot>=0.9.0",
    "testcontainers>=4.0.0",
    "testcontainers-redis>=0.0.1rc1",
    "testcontainers-neo4j>=0.0.1rc1",
]

# Mojo integration (optional for now)
mojo = [
    # Mojo will be added here when migrating
    # Note: Mojo installed via modular CLI, not pip
]

# Machine learning features (optional)
ml = [
    "sentence-transformers>=2.2.0",  # BGE-M3 semantic search
    "torch>=2.0.0",                  # Deep learning backend
    "numpy>=1.24.0",                 # Numerical operations
    "transformers>=4.30.0",          # HuggingFace base
    "datasets>=2.0.0",               # Dataset utilities
    "huggingface-hub>=0.20.0",       # Model hub access
]

# Web/API features (optional)
api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]

# Agent SDK (optional, for custom agents)
agents = [
    "claude-agent-sdk>=0.1.0",
]

# Dirichlet character operators (Phase 3/7 - L-function computations)
dirichlet = [
    # NOTE: Basic character functions (χ₇₁.a-h) work with stdlib only
    # These are for advanced transformations (Phase 7 rollout):
    "scipy>=1.11.0",              # Legendre symbol, special functions
    "mpmath>=1.3.0",              # High-precision L-function evaluation
    "gudhi>=3.9.0",               # Persistent homology (Mode 2)
    # OR: "ripser>=0.6.0",        # Alternative persistence backend
]

# Full development environment
all = [
    "synapse[dev,ml,api,agents,dirichlet]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["lib"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=lib",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["lib"]
omit = [
    "tests/*",
    "**/__pycache__/*",
    "**/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.uv]
environments = ["sys_platform == 'linux' and platform_machine == 'x86_64'"]
dev-dependencies = [
    # uv-specific dev dependencies can go here
]
